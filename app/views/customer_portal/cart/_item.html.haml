.flex.gap-4.rounded-lg.border.border-gray-200.bg-white.p-4.shadow-sm.w-full.h-fit{id: "cart-item-#{cart[:id]}-#{cart[:type]}"}
  - if cart[:thumbnail].present?
    = image_tag cart[:thumbnail], class: "h-20 w-20 min-w-20 min-h-20 rounded"
  - else
    = image_tag "thumbnail.png", class: "h-20 w-20 min-w-20 min-h-20 rounded"
  .space-y-4.md:flex.md:items-center.md:justify-between.md:gap-6.md:space-y-0.w-full
    .flex.items-center.justify-between.md:order-3.md:justify-end{data: {controller: "cp--catalog--qty"}}
      #quantity-container
        #quantity.small
          = button_tag class: "decrement transition-colors duration-200", type: "button", data: {action: "cp--catalog--qty#decrement"} do
            = icon("fa-solid", "minus")
          = number_field_tag 'cart[quantity]', cart[:quantity], min: 1, id: "cart-item-qty-#{cart[:id]}-#{cart[:type]}", class: "number-input transition-colors duration-200", data: {"cp--catalog--qty-target": "quantity", action: "input->cp--catalog--qty#quantityInput change->cp--catalog--qty#quantityChange"}
          = button_tag class: "increment transition-colors duration-200", type: "button", data: {action: "cp--catalog--qty#increment"} do
            = icon("fa-solid", "plus")
      .text-end.md:order-4.md:w-28
        %p.text-base.font-bold.text-gray-900
          = number_to_currency(cart[:total_price], unit: "$", precision: 2)
    .w-full.min-w-0.flex-1.md:space-y-4.md:order-2.md:max-w-md
      .text-base.font-medium.text-gray-900
        = cart[:name]
      .flex.items-center.gap-4
        = button_to customer_portal_cart_path(id: cart[:id], type: cart[:type]), method: :delete, class: "inline-flex items-center text-sm font-medium text-red-600 px-3 py-1 rounded-lg -ml-3 hover:bg-red-50", form: {data: {turbo_confirm: 'Are you sure to remove this cart?'}} do
          = icon("fa-solid", "trash-can", class: "mr-2")
          Remove
