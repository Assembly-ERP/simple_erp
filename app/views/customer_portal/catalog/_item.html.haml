.relative.w-full{id: "#{item.type}_#{item.id}"}
  -# = render "item_modal", item: item
  .cursor-pointer.p-4.grid.gap-5.hover:bg-gray-50.bg-white.border.border-gray-200.rounded-lg.shadow{data: {action: "click->dialog#open"}}
    .flex.w-full.flex.flex-col.md:flex-row.md:items-center.gap-4
      - if item.type == "part"
        - item_part = item.becomes(Part)
        - if item_part.images.first.present?
          = image_tag item_part.images.first.variant(:thumb), class: "w-20 h-20 object-cover border rounded-sm"
        - else
          = image_tag "thumbnail.png", class: "w-20 h-20 rounded object-cover"
      - else 
        - if item.images.first.present?
          = image_tag item.images.first.variant(:thumb), class: "w-20 h-20 object-cover border rounded-sm"
        - else
          = image_tag "thumbnail.png", class: "w-20 h-20 rounded object-cover"
      .flex.flex-col.md:justify-between.w-full
        .grid.grid-cols-2.lg:grid-cols-12.w-full.gap-4
          .flex.flex-col.justify-between.h-full.lg:col-span-4
            %h3.text-base.font-medium.text-gray-700.mb-1
              = item.name
            .block{class: "#{item.type}-type-tag"}
              = item.type.humanize
          .lg:col-span-2
            %h6.font-normal.text-gray-500 Price
            %p.font-medium.text-gray-900
              = number_to_currency(item.price, unit: "$", precision: 2)
          .lg:col-span-2
            %h6.font-normal.text-gray-500 In stock
            %p.font-medium.text-gray-900
              - if item.type == "product"
                - if item.available
                  %span.text-green-600{class: "text-[15px]"} Available
                - else
                  %span.text-red-600{class: "text-[15px]"} Not available
              - else
                - if item.inventory
                  - if item.in_stock.positive?
                    = item.in_stock
                    stock
                  - else
                    %span.text-red-600{class: "text-[15px]"} Out of stock
                - else
                  %span.text-green-600{class: "text-[15px]"} Available
          .lg:col-span-2
            %h6.font-normal.text-gray-500 Weight
            %p.font-medium.text-gray-900
              = number_with_precision(item.weight, precision: 2)
              lbs
    = form_with(as: "cart", url: customer_portal_cart_index_path(id: item.id)) do |form|
      .flex.gap-5.items-center
        #quantity-container{data: {controller: "cp--catalog--qty"}}
          #quantity
            = button_tag class: "decrement transition-colors duration-200", type: "button", data: {action: "cp--catalog--qty#decrement"} do
              = icon("fa-solid", "minus")
            = number_field_tag 'cart[quantity]', 1, min: 1, id: "catalog-item-qty-#{item.id}-#{item.type}", class: "number-input transition-colors duration-200", data: {"cp--catalog--qty-target": "quantity", action: "input->cp--catalog--qty#quantityInput change->cp--catalog--qty#quantityChange"}
            = button_tag class: "increment transition-colors duration-200", type: "button", data: {action: "cp--catalog--qty#increment"} do
              = icon("fa-solid", "plus")
        = form.hidden_field "cart[type]", value: item.type
        = form.submit "Add to Cart", class: "px-4 py-2 rounded-lg text-sm bg-[color:var(--primary)] text-[color:var(--primary-text)]"
