.grid.grid-cols-8.added-item.w-full.text-gray-900.gap-2.nested-form-wrapper{class: "py-3.5", id: "item-form-#{type}_#{item_id}", data: {"new-record": f.object.new_record?.to_s, item_id: item_id, qty: quantity, price: item_price, original_price: f.object.new_record? ? item_price : f.object&.product_price || f.object&.part_price, override: f.object.override.to_s, controller: "orders--item"}}
  .w-60.min-w-56.whitespace-nowrap.col-span-3.pl-3
    = name
  .block
    .rounded-md.w-fit.text-sm.text-white.px-3.bg-gray-500{class: "py-0.5"}
      = type
  .whitespace-nowrap.text-center
    %span= "x#{quantity}"
  .whitespace-nowrap.flex.gap-1.items-center.justify-center
    %span $
    = f.number_field :price, value: item_price, class: "rounded border border-gray-300 w-[70px] px-0 py-0 text-center [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none", data: {"orders--item-target": "itemPrice", action: "input->orders--item#priceChange input->orders--form#calculateSummary change->orders--form#calculateSummary"}, step: :any
  .font-semibold.flex.whitespace-nowrap.justify-center{data: {"orders--item-target": "total"}}
    = price.kind_of?(String) ? "$#{price}" : number_to_currency(quantity * price.to_f, unit: "$", precision: 2)
  .flex.justify-end.pr-3
    %button.text-gray-400.hover:text-red-500{type: "button", data: {pid: item_id, type: type, action: "orders--form#remove"}}
      = icon("fa-solid", "trash-can", class: "pointer-events-none")
  = f.hidden_field :id, value: id
  = f.hidden_field :part_id, value: part_id
  = f.hidden_field :product_id, value: product_id
  = f.hidden_field :quantity, value: quantity
  = f.hidden_field :_destroy
