- search_path = search_part_results_operational_portal_products_path(format: :turbo_stream, product_id: @product.id)

.grid.gap-3.mt-2.bg-white.py-4.rounded.border.border-gray-300
  .flex.gap-4.items-center.px-4
    .flex
      .relative
        %input.text-sm.border.border-gray-300.rounded-l-lg.pl-10.pr-4.w-96{class: "py-2.5 focus:outline-[color:var(--primary)]", placeholder: "Search parts", data: {"products--form-target": "searchInput", action: "input->products--form#search keydown.enter->products--form#onEnter", url: search_path}}
        = icon("fa-solid", "magnifying-glass", class: "text-sm absolute top-3.5 left-3.5 text-gray-400")
      %button.rounded-r-lg.px-5.text-white.-ml-1.z-10{type: "button", class: "bg-[color:var(--primary)]"}
        search
    %button.hidden.py-2.flex.gap-2.items-center.justify-center.px-4.font-medium.text-gray-900.focus:outline-none.bg-white.rounded-xl.border.border-gray-300.hover:bg-gray-100.focus:z-10.focus:ring-4.focus:ring-gray-200{"data-dropdown-toggle" => "dropdownFilter", type: "button"}
      = icon("fa-solid", "filter", class: "text-gray-400")
      %span.text-gray-500 Filter
      = icon("fa-solid", "chevron-down", class: "text-gray-400 text-sm")
  .h-72.overflow-y-auto.w-full.relative.overscroll-contain
    = turbo_frame_tag "search-parts-results", src: search_path, loading: :lazy do
      = render "loading_template"
