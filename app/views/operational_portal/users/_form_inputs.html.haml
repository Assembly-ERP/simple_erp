.grid.gap-3{data: {controller: "users--form"}}
  - if resource.errors.any?
    = render ErrorCardComponent.new errors: resource.errors.full_messages, label: "validations"
  .grid.grid-cols-2.gap-x-4.gap-y-3
    .field
      = form.label :first_name
      = form.text_field :first_name, placeholder: "First Name", class: "input-primary"
    .field
      = form.label :last_name
      = form.text_field :last_name, placeholder: "Last Name", class: "input-primary", required: true
    .field
      = form.label :email
      = form.email_field :email, placeholder: "email@example.com", class: "input-primary", required: true
    .field
      = form.label :phone
      = form.telephone_field :phone, placeholder: "Phone", class: "input-primary"
  .flex.flex-col.gap-1
    %h1.font-medium Assign Role
    .flex.gap-8.items-center
      - User::ROLES.each_with_index do |role, index|
        .flex.gap-1.items-center
          = radio_button("user", "role", role, {checked: index.zero?, class: "bg-foreground", "data-action": role.include?( "customer") ? "users--form#showCustomerInput" : "users--form#hideCustomerInput"})
          = label_tag "user_role_#{role}", role.humanize
  .grid.grid-cols-2.gap-x-4.gap-y-3
    .field{class: form.object.customer_user? ? "" : "hidden", data: {"users--form-target": "customerDisplay"}}
      = form.label :customer_id
      = form.select :customer_id, Customer.all.map { |customer| [customer.name, customer.id] }, {prompt: 'Select a customer'}, {"data-users--form-target": "select", required: form.object.role&.include?( "customer")}
  .block.mt-2.flex.gap-4
    = form.submit resource.new_record? ? "Save User" : "Update User", class: "btn-md bg-[color:var(--primary)] text-[color:var(--primary-text)]"
    - if params[:modal] == "true"
      %button.btn-md.bg-white.border.border-gray-300.font-medium{type: :button, data: {action: "dialog#close"}}
        Cancel
