<!-- app/views/operational_portal/parts/show.html.erb -->
<div class="container">
<h1>Part: <%= @part.name %></h1>
  <div class="images">
  <button class="slide-button left" onclick="slideLeft()">&#10094;</button>
  <div class="image-wrapper">
    <div class="image-track">
      <% @part.files.each do |file| %>
        <% if file.content_type.start_with?('image') %>
          <div class="image-preview">
            <%= image_tag url_for(file.variant(resize_to_limit: [100, 100])), style: "width: 20vw; cursor: pointer;", onclick: "openModal('#{url_for(file)}')" %>
          </div>
        <% end %>
      <% end %>
    </div>
  </div>
  <button class="slide-button right" onclick="slideRight()">&#10095;</button>
</div>


  <div class="other-files">
    <h3>Other Files</h3>
    <ul class="files-list" style="list-style-type: none; padding: 0;">
      <% @part.files.each do |file| %>
        <% unless file.content_type.start_with?('image') %>
          <li style="margin-bottom: 10px; display: flex; flex-direction: column; align-items: center;">
            <%= link_to file.filename, url_for(file), target: "_blank", onclick: "previewFile(event, '#{url_for(file)}', '#{file.content_type}')" %>
          </li>
        <% end %>
      <% end %>
    </ul>
  </div>

<p>
  <strong>Price:</strong>
  <%= @part.price %>
</p>

<% if @part.inventory %>
  <p>
    <strong>In Stock:</strong>
    <%= @part.in_stock %>
  </p>
<% end %>

<p>
  <strong>Description:</strong>
  <%= @part.description %>
</p>

<p>
  <strong>Weight:</strong>
  <%= number_with_precision(@part.weight, precision: 2) %>
</p>

<p>
  <strong>Attributes:</strong>
  <%= @part.json_attributes %>
</p>

<%= link_to 'Edit', edit_operational_portal_part_path(@part), class: 'btn btn-secondary' %> |
<%= link_to 'Back', operational_portal_catalog_path, class: 'btn btn-primary' %>

</div>

<!-- Modal Structure for Images -->
<div id="imageModal" class="modal">
  <span class="close" onclick="closeModal()">&times;</span>
 <div id="spinner" class="spinner"></div>
  <img class="image-modul" id="modalImage">
  <div id="caption"></div>
</div> 
 
<!-- Modal for file preview -->
<div id="fileModal" class="modal">
  <span class="close" onclick="closeFileModal()">&times;</span>
 <div id="fileSpinner" class="spinner"></div>
  <iframe class="preview-modal" id="modalFile"></iframe>
  <div id="fileCaption"></div> 
</div> 


<script>
  document.addEventListener("DOMContentLoaded", function() {
  const fileInput = document.querySelector('input[type="file"]');
  const previewContainer = document.getElementById('new-file-previews');

  if (fileInput) {
    fileInput.addEventListener('change', function(event) {
      previewContainer.innerHTML = ''; // Clear previous previews
      Array.from(event.target.files).forEach(file => {
        if (file.type.startsWith('image')) {
          const reader = new FileReader();
          reader.onload = function(e) {
            const img = document.createElement('img');
            img.src = e.target.result;
            img.style.maxWidth = '10vw';
            img.style.maxHeight = '10vh';
            img.style.marginBottom = '10px';
            previewContainer.appendChild(img);
          };
          reader.onerror = function(error) {
            console.error("Error loading file preview: ", error);
          };
          reader.readAsDataURL(file);
        }
      });
    });
  }

  
  const closeButtons = document.querySelectorAll('.close');
  closeButtons.forEach(button => {
    button.addEventListener('click', function() {
      const modal = this.closest('.modal');
      if (modal) {
        modal.style.display = 'none';
        const modalContent = modal.querySelector('.preview-modal');
        if (modalContent) {
          if (modalContent.tagName === 'IMG' || modalContent.tagName === 'IFRAME') {
            modalContent.src = '';
          }
        }
      }
    });
  });
});


function openModal(imageSrc) {
  const modal = document.getElementById("imageModal");
  const modalImg = document.getElementById("modalImage");
  const spinner = document.getElementById("spinner");

  modal.style.display = "block";
  spinner.style.display = "block";
  modalImg.style.display = "none";

  modalImg.onload = function() {
    spinner.style.display = "none";
    modalImg.style.display = "block";
  };

  modalImg.src = imageSrc;
}

function closeModal() {
  const modal = document.getElementById("imageModal");
  if (modal) {
    modal.style.display = "none";
  }
}

function previewFile(event, fileUrl, contentType) {
  event.preventDefault();
  const modal = document.getElementById("fileModal");
  const modalFile = document.getElementById("modalFile");
  const spinner = document.getElementById("fileSpinner");

  modal.style.display = "block";
  spinner.style.display = "block";
  modalFile.style.display = "none";

  modalFile.onload = function() {
    spinner.style.display = "none";
    modalFile.style.display = "block";
  };

  modalFile.src = fileUrl;
}

function closeModal() {
  const modal = document.getElementById("imageModal");
  if (modal) {
    modal.style.display = "none";
  }
}

function closeFileModal() {
  const modal = document.getElementById("fileModal");
  if (modal) {
    modal.style.display = "none";
  }
}

let currentSlide = 0;
const slideWidth = 10; // Width of one image in vw (20vw for three images at a time, assuming each image takes 20vw)

function slideLeft() {
  const track = document.querySelector('.image-track');
  currentSlide = Math.max(currentSlide - 1, 0);
  track.style.transform = `translateX(-${currentSlide * slideWidth}vw)`;
}

function slideRight() {
  const track = document.querySelector('.image-track');
  const totalSlides = document.querySelectorAll('.image-preview').length;
  const maxSlides = totalSlides - 3; // Adjust this based on the number of visible images
  currentSlide = Math.min(currentSlide + 1, maxSlides);
  track.style.transform = `translateX(-${currentSlide * slideWidth}vw)`;
}

</script>


<style>
  /* Modal styles */

  .images {
  position: relative;
  width: 30vw; /* 3 images * 20vw */
  overflow: hidden;
  margin: auto;
  }

.image-slider {
  display: flex;
  align-items: center;
}

.image-wrapper {
  overflow: hidden;
  width: 100%;
}

.image-track {
  display: flex;
  transition: transform 0.3s ease;
}

.image-preview {
  flex: 0 0 auto;
  margin: 1px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.image-preview img {
  width: auto;
  height: auto;
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;/* Ensure the image covers the area without distortion */
}

 /* Responsive styles */
@media (max-width: 768px) {
  .image-preview {
     flex: 0 0 50%; /* Display two images at a time on mobile  */
  }
}

@media (min-width: 769px) {
  .image-preview {
    flex: 0 0 30%; /* Display three images at a time on desktop */ 
  }
}

.slide-button {
  background-color: rgba(0,0,0,0.5);
  border: none;
  color: white;
  font-size: 20px;
  cursor: pointer;
  padding: 10px;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 1;
}

.slide-button.left {
  left: 0;
}

.slide-button.right {
  right: 0;
}

  .modal {
    display: none;
    position: fixed;
    z-index: 1;
    padding-top: 60px;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgb(0,0,0);
    background-color: rgba(0,0,0,0.9);
  }

  .image_modal {
    margin: auto;
    display: block;
    width: 80vw
    max-width: 700px;
  }

  .image_modal {
    animation-name: zoom;
    animation-duration: 0.6s;
  }

  @keyframes zoom {
    from {transform: scale(0)}
    to {transform: scale(1)}
  }

  .close {
    position: absolute;
    top: 15px;
    right: 35px;
    color: #f1f1f1;
    font-size: 40px;
    font-weight: bold;
    transition: 0.3s;
  }

  .close:hover,
  .close:focus {
    color: #bbb;
    text-decoration: none;
    cursor: pointer;
  }

  .spinner-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
}

  .spinner {
  border: 12px solid #f3f3f3; /* Light grey */
  border-top: 12px solid #3498db; /* Blue */
  border-radius: 50%;
  width: 50px;
  height: 50px;
  animation: spin 1s linear infinite;
  display: none; /* Initially hidden */
  position: absolute;
  top: 45%;
  left: 45%;
  transform: translate(-50%, -50%);
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
.modal-content {
  display: none;
}

</style>
